#!/bin/sh
# Version 20140411
work_dir=$(cd "$(dirname "$0")"; pwd)
cd $work_dir
local_dir_home=$1
build_type=$2
release=$3
platform=$4
build_level=$5

arr_build_type=(${build_type//,/ })
arr_release=(${release//,/ })
arr_platform=(${platform//,/ })
subject="Storwize builds auto downloaded $*"
content="Dear All"

echo "======================================================================================================="
echo "Usage:  ./down_build.sh [build_dir] [build_type] [release1,release2] [platform1,platform2] (build_level)"
echo ""
echo "Example ./down_build.sh `pwd` buildboxes lodestone740,lodestone730 2145,2076"
echo "======================================================================================================="
if [ $# -lt 4 ]
      then
      echo "$0 $*"
      echo "ErrorMsg: The number of arguments is not enough!"
      exit 1
fi

send_email(){
	body=$2
	body=${body//\\n/<br>}
	$work_dir/../emailsender.py "$1" "$body" "shenrui@cn.ibm.com,likezhao@cn.ibm.com,yechen@cn.ibm.com,youmiaoz@cn.ibm.com,bjlizhen@cn.ibm.com,jtingsh@cn.ibm.com,weishux@cn.ibm.com,zhuzhenq@cn.ibm.com" "likezhao@cn.ibm.com"
 #$work_dir/../emailsender.py "$1" "$body" "likezhao@cn.ibm.com" ""
}

down_build(){
	echo "Downloaing builds ..."
	build_dir=$1
	build_url=$2
	wget -P $build_dir $build_url
}

clean_build(){
	echo "Cleaning old builds ..."
	clean_dir=$1
	retain_count=$2
	cd $clean_dir
        while [ `ls -d *|wc -l` -gt $retain_count ]
        do
                ls -d -t *|tail -1|xargs rm -rf
        done
}
check_md5sum(){
	downloadpath=$1
#	downloadpath="/SVC/build/730/buildbox/140331"
	checksumfile="${downloadpath}/md5sums"
	excludedfiles=(md5sums version)
	for filename in `ls $downloadpath`; do
		echo "${excludedfiles[@]}"|grep -wqF "$filename" && continue
		md5sum=`cat $checksumfile | sed -n "/\${filename}/p"|awk '{print $1}'`
		result=`md5sum $downloadpath/$filename|awk '{print $1}'`
		if [ "$result" = "$md5sum" ]
			then
				log_mail_content "$filename passed MD5Checksum!"
		else
				log_mail_content "$filename failed MD5Checksum!"
		fi
	done
	return 0
}

log_mail_content(){
	echo "$1"
	content="${content}\n$1"
}

get_latest(){
	if [ $build_level == 5 ]
		then 
		latest=$build_level
	else
		latest=`$work_dir/getlatest.exp "$work_dir" $1 $2|tail -n1`
		latest=`echo $latest|awk '{print substr($0,0,length($0)-1)}'`
	fi
}

echo "Main script is starting ... "

for i in ${arr_build_type[@]}
  do
	for j in ${arr_release[@]}
		do
			log_mail_content "Build release: $i $j"
			get_latest $i $j
			local_latest_dir=$local_dir_home/$i/$j/$latest
	    	for k in ${arr_platform[@]}
	       		do
		   			file_name=$k"_"$latest".tgz.gpg"
					file_name_ug1=$k"_"$latest"_ug1.tgz.gpg"
		   			latest_file=$local_latest_dir/$file_name
		   			url="http://w3.ssd.hursley.ibm.com/build/$j/$latest/inst.images/default/shipdata/$file_name"
					ug1_url="http://w3.ssd.hursley.ibm.com/build/$j/$latest/inst.images/default/shipdata/$file_name_ug1"
		   			md5_url="http://w3.ssd.hursley.ibm.com/build/$j/$latest/inst.images/default/shipdata/md5sums"
					version_url="http://w3.ssd.hursley.ibm.com/build/$j/$latest/inst.images/default/shipdata/compass/version"
		   			if [ -f "$latest_file" ] ; then
								log_mail_content "${file_name} exists already. Skip the download"
		 			else
				 mkdir -p $local_latest_dir
				 	down_build $local_latest_dir $url
					down_build $local_latest_dir $ug1_url
					log_mail_content "${file_name} has been downloaded!"
					log_mail_content "${file_name_ug1} has been downloaded!"
					fi
				done	
			if  [ -f "${local_latest_dir}/md5sums" ]  
				then
					echo "md5sums exists"
			else
				down_build $local_latest_dir $md5_url
			fi
		check_md5sum $local_latest_dir 
		    
			if  [ -f "${local_latest_dir}/version" ]
			   then
				      echo "version file exists"
		     else
			   down_build $local_latest_dir $version_url
			 fi

	done
		clean_build $local_dir_home/$i/$j 3
 done

	send_email "$subject" "${content}"
